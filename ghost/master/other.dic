OnTranslate
{
	_talk = reference0
	
	//This is what makes %(embedded_elements) work in script input
	if reference1 == "" && reference2 == "" //If this is from the input box
	{ //send input box : no event (ref2) , no special flag (ref1)
		_talk = EVAL('"' + REPLACE(_talk,'"','""') + '"')
	}
	
	//If you want to add anything to OnTranslate, like text replacement, I would put it after this point, generally. Just make sure it's before the TOSTR(_talk)
	_talk = REPLACE(_talk,"\0\b[0]","\0\b[%(SakuraBalloon)0]")
	_talk = REPLACE(_talk,"\0\b[2]","\0\b[%(SakuraBalloon)2]")
	
	
	void RE_GREP(_talk,"\\p\[\d+\]\\b\[\d\]")
	_tags = RE_GETSTR
	_i = 0
	_tag_replace_array = IARRAY
	foreach _tags; _tag
	{
		_size = 0
		if "\b[2]" _in_ _tag; _size = 2
		if GuyBalloon == 1; _size += 4
		
		_char = ""
		_char = SPLIT(_tag,"]")[0]
		_char = REPLACE(_char,"\p[","")
		_char = TOINT(_char)
		
		LOGGING(_char,_bloon)
		
		_sona = LilGuys[_char][0,"|"]
		_shape = 0
		if _sona == 0; _shape = 6
		elseif _sona == 1; _shape = 3
		elseif _sona == 2; _shape = 5
		elseif _sona == 3; _shape = 1
		elseif _sona == 4; _shape = 2
		
		elseif _sona == 100; _shape = 4
		elseif _sona == 101; _shape = 0
		elseif _sona == 102; _shape = 6
		
		_tag_replace_array ,= "\p[%(_char)]\b[1%(_shape)%(_size)]"
		
		_talk = REPLACE(_talk,_tag,"__TALK_TAG_%(_i)__")
		_i++
	}
	
	for _i = 0; _i < ARRAYSIZE(_tags); _i++
	{
		_talk = REPLACE(_talk,"__TALK_TAG_%(_i)__",_tag_replace_array[_i])
	}
	
	//Autopause - yes i typed this in manually and i didn't even look at my existing autopause function
	if "\![no-pause]" !_in_ _talk
	{
		_talk = REPLACE(_talk,". ",".\w8 ")
		_talk = REPLACE(_talk,", ",",\w4 ")
		_talk = REPLACE(_talk,"- ","-\w8 ")
		_talk = REPLACE(_talk,"; ",";\w8 ")
		_talk = REPLACE(_talk,": ",":\w8 ")
		_talk = REPLACE(_talk,"? ","?\w8 ")
		_talk = REPLACE(_talk,"! ","!\w8 ")
	}
	
	TOSTR(_talk)
}

//This is just here so you can use anchors to link to websites if you want. You can link to websites with normal menu choice tags! If you do, a handy URL preview will show up in the balloon!
OnAnchorSelect
{
	if "http://" _in_ reference0 || "https://" _in_ reference0; "\j[""%(reference0)""]"
}

//Hotkeys
OnKeyPress
{
	if reference0 == "f1"; "\![open,readme]"
	elseif reference0 == "t"; OnAiTalk
	elseif reference0 == "r"; OnLastTalk
}

//Happens about 30 seconds after a script ends, by default, to bring them back to normal poses
OnSurfaceRestore
{
	Refresh
}

//Happens when the ghost is unminimized. You *can* include dialogue, but you don't *have* to. I have included this event because if you don't, it defaults to \0\s[0]\1\s[10], which you don't want in some cases, such as if your ghost uses different surfaces or has a different number of characters.
OnWindowStateRestore
{
	Refresh
}

/*

im gonna die
but before then, refresh code
need to use the isvisible array i think for the else loop
um
and then set it up to do nnnnormal surfaces for if the lil guys are visible
i need to plan out a lil guy array

*/


Refresh : all
{
	for _i = 1; _i < ARRAYSIZE(SHIORI3FW.IsVisible); _i++
	{
		if GalleryOpen
		{
			_guy = LilGuys[_i]
			if !(_guy == "" || _guy == "blank"); "\p[%(_i)]\s[1%(_guy[1,'|'])%(GuyColor)0]" //TODO add color option later
			elseif SHIORI3FW.IsVisible[_i] != 0; "\p[%(_i)]\s[-1]"
		}
		elseif SHIORI3FW.IsVisible[_i] != 0; "\p[%(_i)]\s[-1]"
	}
	"\0\s[%(PaintingType)00]" //TODO painting here
}

BalloonIsInTheWay
{
	_i = 0
	_value = ASEARCH("Status",var.req.key)
	if "balloon" _in_ var.req.value[_value]; _i = 1
	_i
}


//Network update url. Make sure you have a / on the end of the url or it will give a warning every time users try to update! If you don't plan to use network updates you can remove this
//IF YOU'RE USING GITHUB FOR NETWORK UPDATES: DO NOT USE github.io URLS! It will cause you pain and suffering. USE raw.githubusercontent!!!
//To get the raw.githubusercontent link super easy:
//• Open your ghost's repo online
//• navigate to the ghost's folder (the top level one, with install.txt, readme.txt, etc)
//• Click on install.txt, or another text file on that level
//• Once on that page, click the "raw" button. You should see the url now starts with raw.githubusercontent
//• Copy that url exactly as is, but *leave off the "install.txt" or whatever file name at the end.*
//Tada! That's your url! Make sure you test it! The dev palette and script/network log can help with that
On_homeurl
{
	""
}


//—————————————————————————————— Right click menu links ——————————————————————————————

//Takes an array of alternating names and urls, and formats them for use with the right click menu
FormatLinks : all
{
	for _i = 0; _i < ARRAYSIZE(_argv); _i++
	{
		_argv[_i] //Add the link/title
		//Alternate between adding %ASC(1) or %ASC(2)
		if _i % 2 == 1; "%ASC(2)"
		else; "%ASC(1)"
	}
}

On_sakura.recommendsites
{
	FormatLinks(recommendsites_sakura)
}

//These are the websites linked in the top option of the sakura's right click menu. The format is simple; write the label of the link on the left followed by a semicolon, and then on the right, the url to link to. These should be separate strings.
recommendsites_sakura : array
{
	"Link label";	"https://link.example.com/link/to/whatever/here/"
}

On_sakura.portalsites 
{
	FormatLinks(portalsites_sakura)
}

//These are the websites linked in the second option of the sakura's right click menu. Same as above
portalsites_sakura : array
{
	"Another link label";	"https://link.example.com/link/to/whatever/here/again/"
	"A third link label";	"https://link.example.com/link/to/whatever/a/third/time/you/can/add/as/many/as/you/want/"
}

On_kero.recommendsites
{
	FormatLinks(recommendsites_kero)
}

//These are the websites linked in the first option of the kero's right click menu. Same as above
recommendsites_kero : array
{
	"These labels can be anything you want";	"https://link.example.com/link/to/whatever/here/once/more/"
}


//—————————————————————————————— User pronoun related ——————————————————————————————

they
{
	if SHIORI3FW.UserSex == "male"; "he"
	elseif SHIORI3FW.UserSex == "female"; "she"
	else; "they"
}

them
{
	if SHIORI3FW.UserSex == "male"; "him"
	elseif SHIORI3FW.UserSex == "female"; "her"
	else; "them"
}

their
{
	if SHIORI3FW.UserSex == "male"; "his"
	elseif SHIORI3FW.UserSex == "female"; "her"
	else; "their"
}

theirs
{
	if SHIORI3FW.UserSex == "male"; "his"
	elseif SHIORI3FW.UserSex == "female"; "hers"
	else; "theirs"
}

themself
{
	if SHIORI3FW.UserSex == "male"; "himself"
	elseif SHIORI3FW.UserSex == "female"; "herself"
	else; "themself"
}

//%(they) %(p('are','is'))
//You can change the name of this function if you want! I kept it short so it's fast to type
p
{
	if SHIORI3FW.UserSex == "undef"; _argv[0] //they are
	else; _argv[1] //he is/she is
}

/*

An example of the above setup:
"%(they) %(p('were','was')) looking for that earlier, I'll ask if %(they)'%('ve','s') found it."

If using they, the %(p) functions will return the first word specified, resulting in:
"they were looking for that earlier, I'll ask if they've found it."

If not using they, for example if using she, it will return the second specified word instead, resulting in:
"she was looking for that earlier, I'll ask if she's found it."

With this function, you can quickly customize words that need to change based on whether it should be singular or plural. Just remember; the %(p) function is set up so that the first word you specify matches with the 'they' labels used on the pronoun functions. You can always switch that around if you like, too.

*/

//Copied from the base SHIORI files, but with the username variable added
OnNotifyUserInfo : void
{
	SHIORI3FW.UserName = reference[0]
	username = reference[0]
	SHIORI3FW.UserNameFull = reference[1]
	SHIORI3FW.UserBirthday = SPLIT(reference[2],',',3)
	for _i = 0 ; _i < 3 ; _i++ {
		SHIORI3FW.UserBirthday[_i] = TOINT(SHIORI3FW.UserBirthday[_i])
	}
	SHIORI3FW.UserSex = reference[3]
}

/*

NEW MOVEMENT CODE because the old stuff sucks and i need to make it all fresh anyways

Needs to detect the width of the current character (property system my love)

Needs to detect the width/edges of the current screen

Needs to decide on a minimum movement length

Needs to decide on a movement speed, maybe calculated by length

I think I can improve this a lot from my previous code...

*/

OnGetWidth
{	
	_char_left = TOINT(reference0[0])
	_char_right = TOINT(reference0[2])
	GuyWidth = TOINT(_char_right - _char_left)
	if GuyWidth == ""; GuyWidth = 240 //default
}

OnWalkStart
{
	WalkingCharacter = "0"
	if reference0 != ""; WalkingCharacter = reference0
	
	if WalkBorder[TOINT(WalkingCharacter)] == ""; WalkBorder[TOINT(WalkingCharacter)] = "0,%(DisplayWidth)" //In case these are undefined
	if BalloonIsInTheWay; "\C"
	--
	"\![get,property,OnWalkAround,currentghost.scope(%(WalkingCharacter)).rect]"
}

OnWalkAround
{
	_char = TOINT(WalkingCharacter)
	ERASEVAR("WalkingCharacter") //globals, yuck
	
	_speed = GuySpeed //ms per px
	
	//left top right bottom
	_char_left = TOINT(reference0[0])
	_char_right = TOINT(reference0[2])
	_width = TOINT(_char_right - _char_left)
	_center = _width / 2
	_center_pos = _char_right - _center
	
	LOGGING("_width: %(_width)")
	_left_edge = TOINT(WalkBorder[_char][0]) //+ _width //think i dont need this extra buffer?
	_right_edge = TOINT(WalkBorder[_char][1]) - _width
	
	LOGGING("_char_left: %(_char_left)")
	LOGGING("_char_right: %(_char_right)")
	LOGGING("_left_edge: %(_left_edge)")
	LOGGING("_right_edge: %(_right_edge)")
	
	_target_pos = 0
	_goodpos = 0
	_i = 0
	while !_goodpos
	{
		//TODO don't think i set this up to snug itself into the corners but do i care, idk
		_target_pos = RAND(_right_edge - _left_edge) + _left_edge
		
		if ABS(ABS(_center_pos) - ABS(_target_pos)) >= _width; _goodpos = 1
		_i++
		if _i >= 1000; break
	}
	_left_or_right = "right"
	if _target_pos <= _center_pos; _left_or_right = "left"
	
	LOGGING("_target_pos: %(_target_pos)")
	LOGGING("_center_pos: %(_center_pos)")
	LOGGING("_left_or_right: %(_left_or_right)")
	
	_time = ABS(ABS(_center_pos) - ABS(_target_pos)) * _speed //TODO i wonder if this should be calculating from character's left edge rather than center point
	
	LOGGING("_time: %(_time)")
	
	_shape = LilGuys[_char][1,'|']
	if BalloonIsInTheWay; "\C"
	--
	"\p[%(_char)]\s[1%(_shape)%(GuyColor)1]\![move,--X=%(_target_pos),--Y=fix,--time=%(_time),--base=primaryscreen]\s[1%(_shape)%(GuyColor)0]" //todo moveasync later maybe?
	
}

OnDisplayHandover
{
	//Make a simple array for each character tracking the left and right boundary of the screen they are on
	//Left,Right.Top - WE ONLY NEED TOP IN ONE SPOT OK
	WalkBorder[reference1] = "%(reference3[0]),%(reference3[2]),%(reference[1])"
}

OnDisplayChange
{
	DisplayWidth = reference1
}

ABS
{
	if _argv[0] < 0; _argv[0] *= -1
	_argv[0]
}

Theme
{
	_info = SPLIT(CurrentPaintingInfo,",")
	_info[0] = IARRAY
	ASEARCH(_argv[0],_info) != -1
}

CurrentPaintingInfo
{
	foreach PaintingInfo; _info
	{
		if _info[0] == CurrentPainting; {_info; return}
	}
	"Empty"
}

//[character ID, category name, part name, option, on-1/off-0, thumbnail path]
OnNotifyDressupInfo
{
	LOGGING("====================================================================")
	LOGGING("DRESSUP INFO")
	LOGGING; LOGGING
	Painting.Landscape = "Empty"
	Painting.Portrait = "Empty"
	Painting.Offset = "Empty"
	Painting.Cluster = "Empty"
	
	foreach reference; _ref
	{
		LOGGING("_ref: %(_ref)")
		LOGGING("_ref[1,C_BYTE1]: %(_ref[1,C_BYTE1])")
		LOGGING("_ref[2,C_BYTE1]: %(_ref[2,C_BYTE1])")
		LOGGING("_ref[4,C_BYTE1]: %(_ref[4,C_BYTE1])")
		if _ref[4,C_BYTE1] == "1"
		{
			if _ref[1,C_BYTE1] == "Landscape"; Painting.Landscape = _ref[2,C_BYTE1]
			if _ref[1,C_BYTE1] == "Portrait"; Painting.Portrait = _ref[2,C_BYTE1]
			if _ref[1,C_BYTE1] == "Offset"; Painting.Offset = _ref[2,C_BYTE1]
			if _ref[1,C_BYTE1] == "Cluster"; Painting.Cluster = _ref[2,C_BYTE1]
		}
		LOGGING
	}
}

CurrentPainting
{
	switch PaintingType - 1
	{
		Painting.Landscape
		Painting.Portrait
		Painting.Offset
		Painting.Cluster
	}
}